Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EQUAL
    GT
    IF
    LT
    MOD

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration
Rule 3     declaration_list -> declaration declaration_list
Rule 4     declaration -> var_declaration
Rule 5     declaration -> function_declaration
Rule 6     var_declaration -> type IDENTIFIER COLON expression SEMI
Rule 7     function_declaration -> FUNC IDENTIFIER LPAREN func_args RPAREN ARROW type LBRACE statement_list RBRACE
Rule 8     func_args -> arg_list
Rule 9     func_args -> empty
Rule 10    arg_list -> type IDENTIFIER
Rule 11    arg_list -> type IDENTIFIER COMMA arg_list
Rule 12    statement_list -> statement
Rule 13    statement_list -> statement statement_list
Rule 14    statement -> var_declaration
Rule 15    statement -> return_statement
Rule 16    statement -> expression_statement
Rule 17    statement -> show_statement
Rule 18    statement -> loopd_statement
Rule 19    return_statement -> RETURN expression SEMI
Rule 20    expression_statement -> expression SEMI
Rule 21    show_statement -> SHOW LPAREN type RPAREN expression SEMI
Rule 22    expression -> term
Rule 23    expression -> expression PLUS term
Rule 24    expression -> expression MINUS term
Rule 25    term -> factor
Rule 26    term -> term MULT factor
Rule 27    term -> term DIV factor
Rule 28    factor -> NUMBER
Rule 29    factor -> IDENTIFIER
Rule 30    factor -> LPAREN expression RPAREN
Rule 31    factor -> function_call
Rule 32    function_call -> IDENTIFIER LPAREN expression_list RPAREN
Rule 33    expression_list -> expression
Rule 34    expression_list -> expression COMMA expression_list
Rule 35    expression_list -> empty
Rule 36    type -> INT32
Rule 37    statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE
Rule 38    statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 39    loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 40    empty -> <empty>

Terminals, with rules where they appear

ARROW                : 7
COLON                : 6
COMMA                : 11 34
DIV                  : 27
EQUAL                : 
FOR                  : 37
FUNC                 : 7
GT                   : 
IDENTIFIER           : 6 7 10 11 29 32
IF                   : 
INT32                : 36
LBRACE               : 7 37 38 39
LOOPD                : 39
LPAREN               : 7 21 30 32 37 38 39
LT                   : 
MINUS                : 24
MOD                  : 
MULT                 : 26
NUMBER               : 28
PLUS                 : 23
RBRACE               : 7 37 38 39
RETURN               : 19
RPAREN               : 7 21 30 32 37 38 39
SEMI                 : 6 19 20 21 37
SHOW                 : 21
WHILE                : 38
error                : 

Nonterminals, with rules where they appear

arg_list             : 8 11
declaration          : 2 3
declaration_list     : 1 3
empty                : 9 35
expression           : 6 19 20 21 23 24 30 33 34 37 37 38 39
expression_list      : 32 34
expression_statement : 16
factor               : 25 26 27
func_args            : 7
function_call        : 31
function_declaration : 5
loopd_statement      : 18
program              : 0
return_statement     : 15
show_statement       : 17
statement            : 12 13
statement_list       : 7 13 37 38 39
term                 : 22 23 24 26 27
type                 : 6 7 10 11 21
var_declaration      : 4 14 37

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration declaration_list
    (4) declaration -> . var_declaration
    (5) declaration -> . function_declaration
    (6) var_declaration -> . type IDENTIFIER COLON expression SEMI
    (7) function_declaration -> . FUNC IDENTIFIER LPAREN func_args RPAREN ARROW type LBRACE statement_list RBRACE
    (36) type -> . INT32

    FUNC            shift and go to state 7
    INT32           shift and go to state 8

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    var_declaration                shift and go to state 4
    function_declaration           shift and go to state 5
    type                           shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .

    $end            reduce using rule 1 (program -> declaration_list .)


state 3

    (2) declaration_list -> declaration .
    (3) declaration_list -> declaration . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration declaration_list
    (4) declaration -> . var_declaration
    (5) declaration -> . function_declaration
    (6) var_declaration -> . type IDENTIFIER COLON expression SEMI
    (7) function_declaration -> . FUNC IDENTIFIER LPAREN func_args RPAREN ARROW type LBRACE statement_list RBRACE
    (36) type -> . INT32

    $end            reduce using rule 2 (declaration_list -> declaration .)
    FUNC            shift and go to state 7
    INT32           shift and go to state 8

    declaration                    shift and go to state 3
    declaration_list               shift and go to state 9
    var_declaration                shift and go to state 4
    function_declaration           shift and go to state 5
    type                           shift and go to state 6

state 4

    (4) declaration -> var_declaration .

    FUNC            reduce using rule 4 (declaration -> var_declaration .)
    INT32           reduce using rule 4 (declaration -> var_declaration .)
    $end            reduce using rule 4 (declaration -> var_declaration .)


state 5

    (5) declaration -> function_declaration .

    FUNC            reduce using rule 5 (declaration -> function_declaration .)
    INT32           reduce using rule 5 (declaration -> function_declaration .)
    $end            reduce using rule 5 (declaration -> function_declaration .)


state 6

    (6) var_declaration -> type . IDENTIFIER COLON expression SEMI

    IDENTIFIER      shift and go to state 10


state 7

    (7) function_declaration -> FUNC . IDENTIFIER LPAREN func_args RPAREN ARROW type LBRACE statement_list RBRACE

    IDENTIFIER      shift and go to state 11


state 8

    (36) type -> INT32 .

    IDENTIFIER      reduce using rule 36 (type -> INT32 .)
    LBRACE          reduce using rule 36 (type -> INT32 .)
    RPAREN          reduce using rule 36 (type -> INT32 .)


state 9

    (3) declaration_list -> declaration declaration_list .

    $end            reduce using rule 3 (declaration_list -> declaration declaration_list .)


state 10

    (6) var_declaration -> type IDENTIFIER . COLON expression SEMI

    COLON           shift and go to state 12


state 11

    (7) function_declaration -> FUNC IDENTIFIER . LPAREN func_args RPAREN ARROW type LBRACE statement_list RBRACE

    LPAREN          shift and go to state 13


state 12

    (6) var_declaration -> type IDENTIFIER COLON . expression SEMI
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    expression                     shift and go to state 15
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 13

    (7) function_declaration -> FUNC IDENTIFIER LPAREN . func_args RPAREN ARROW type LBRACE statement_list RBRACE
    (8) func_args -> . arg_list
    (9) func_args -> . empty
    (10) arg_list -> . type IDENTIFIER
    (11) arg_list -> . type IDENTIFIER COMMA arg_list
    (40) empty -> .
    (36) type -> . INT32

    RPAREN          reduce using rule 40 (empty -> .)
    INT32           shift and go to state 8

    func_args                      shift and go to state 21
    type                           shift and go to state 22
    arg_list                       shift and go to state 23
    empty                          shift and go to state 24

state 14

    (29) factor -> IDENTIFIER .
    (32) function_call -> IDENTIFIER . LPAREN expression_list RPAREN

    MULT            reduce using rule 29 (factor -> IDENTIFIER .)
    DIV             reduce using rule 29 (factor -> IDENTIFIER .)
    SEMI            reduce using rule 29 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 29 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 29 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 29 (factor -> IDENTIFIER .)
    COMMA           reduce using rule 29 (factor -> IDENTIFIER .)
    LPAREN          shift and go to state 25


state 15

    (6) var_declaration -> type IDENTIFIER COLON expression . SEMI
    (23) expression -> expression . PLUS term
    (24) expression -> expression . MINUS term

    SEMI            shift and go to state 26
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 16

    (22) expression -> term .
    (26) term -> term . MULT factor
    (27) term -> term . DIV factor

    SEMI            reduce using rule 22 (expression -> term .)
    PLUS            reduce using rule 22 (expression -> term .)
    MINUS           reduce using rule 22 (expression -> term .)
    RPAREN          reduce using rule 22 (expression -> term .)
    COMMA           reduce using rule 22 (expression -> term .)
    MULT            shift and go to state 29
    DIV             shift and go to state 30


state 17

    (25) term -> factor .

    MULT            reduce using rule 25 (term -> factor .)
    DIV             reduce using rule 25 (term -> factor .)
    SEMI            reduce using rule 25 (term -> factor .)
    PLUS            reduce using rule 25 (term -> factor .)
    MINUS           reduce using rule 25 (term -> factor .)
    RPAREN          reduce using rule 25 (term -> factor .)
    COMMA           reduce using rule 25 (term -> factor .)


state 18

    (28) factor -> NUMBER .

    MULT            reduce using rule 28 (factor -> NUMBER .)
    DIV             reduce using rule 28 (factor -> NUMBER .)
    SEMI            reduce using rule 28 (factor -> NUMBER .)
    PLUS            reduce using rule 28 (factor -> NUMBER .)
    MINUS           reduce using rule 28 (factor -> NUMBER .)
    RPAREN          reduce using rule 28 (factor -> NUMBER .)
    COMMA           reduce using rule 28 (factor -> NUMBER .)


state 19

    (30) factor -> LPAREN . expression RPAREN
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    expression                     shift and go to state 31
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 20

    (31) factor -> function_call .

    MULT            reduce using rule 31 (factor -> function_call .)
    DIV             reduce using rule 31 (factor -> function_call .)
    SEMI            reduce using rule 31 (factor -> function_call .)
    PLUS            reduce using rule 31 (factor -> function_call .)
    MINUS           reduce using rule 31 (factor -> function_call .)
    RPAREN          reduce using rule 31 (factor -> function_call .)
    COMMA           reduce using rule 31 (factor -> function_call .)


state 21

    (7) function_declaration -> FUNC IDENTIFIER LPAREN func_args . RPAREN ARROW type LBRACE statement_list RBRACE

    RPAREN          shift and go to state 32


state 22

    (10) arg_list -> type . IDENTIFIER
    (11) arg_list -> type . IDENTIFIER COMMA arg_list

    IDENTIFIER      shift and go to state 33


state 23

    (8) func_args -> arg_list .

    RPAREN          reduce using rule 8 (func_args -> arg_list .)


state 24

    (9) func_args -> empty .

    RPAREN          reduce using rule 9 (func_args -> empty .)


state 25

    (32) function_call -> IDENTIFIER LPAREN . expression_list RPAREN
    (33) expression_list -> . expression
    (34) expression_list -> . expression COMMA expression_list
    (35) expression_list -> . empty
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (40) empty -> .
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    RPAREN          reduce using rule 40 (empty -> .)
    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    expression_list                shift and go to state 34
    expression                     shift and go to state 35
    empty                          shift and go to state 36
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 26

    (6) var_declaration -> type IDENTIFIER COLON expression SEMI .

    FUNC            reduce using rule 6 (var_declaration -> type IDENTIFIER COLON expression SEMI .)
    INT32           reduce using rule 6 (var_declaration -> type IDENTIFIER COLON expression SEMI .)
    $end            reduce using rule 6 (var_declaration -> type IDENTIFIER COLON expression SEMI .)
    FOR             reduce using rule 6 (var_declaration -> type IDENTIFIER COLON expression SEMI .)
    WHILE           reduce using rule 6 (var_declaration -> type IDENTIFIER COLON expression SEMI .)
    RETURN          reduce using rule 6 (var_declaration -> type IDENTIFIER COLON expression SEMI .)
    SHOW            reduce using rule 6 (var_declaration -> type IDENTIFIER COLON expression SEMI .)
    LOOPD           reduce using rule 6 (var_declaration -> type IDENTIFIER COLON expression SEMI .)
    NUMBER          reduce using rule 6 (var_declaration -> type IDENTIFIER COLON expression SEMI .)
    IDENTIFIER      reduce using rule 6 (var_declaration -> type IDENTIFIER COLON expression SEMI .)
    LPAREN          reduce using rule 6 (var_declaration -> type IDENTIFIER COLON expression SEMI .)
    RBRACE          reduce using rule 6 (var_declaration -> type IDENTIFIER COLON expression SEMI .)


state 27

    (23) expression -> expression PLUS . term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    term                           shift and go to state 37
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 28

    (24) expression -> expression MINUS . term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    term                           shift and go to state 38
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 29

    (26) term -> term MULT . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    factor                         shift and go to state 39
    function_call                  shift and go to state 20

state 30

    (27) term -> term DIV . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    factor                         shift and go to state 40
    function_call                  shift and go to state 20

state 31

    (30) factor -> LPAREN expression . RPAREN
    (23) expression -> expression . PLUS term
    (24) expression -> expression . MINUS term

    RPAREN          shift and go to state 41
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 32

    (7) function_declaration -> FUNC IDENTIFIER LPAREN func_args RPAREN . ARROW type LBRACE statement_list RBRACE

    ARROW           shift and go to state 42


state 33

    (10) arg_list -> type IDENTIFIER .
    (11) arg_list -> type IDENTIFIER . COMMA arg_list

    RPAREN          reduce using rule 10 (arg_list -> type IDENTIFIER .)
    COMMA           shift and go to state 43


state 34

    (32) function_call -> IDENTIFIER LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 44


state 35

    (33) expression_list -> expression .
    (34) expression_list -> expression . COMMA expression_list
    (23) expression -> expression . PLUS term
    (24) expression -> expression . MINUS term

    RPAREN          reduce using rule 33 (expression_list -> expression .)
    COMMA           shift and go to state 45
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 36

    (35) expression_list -> empty .

    RPAREN          reduce using rule 35 (expression_list -> empty .)


state 37

    (23) expression -> expression PLUS term .
    (26) term -> term . MULT factor
    (27) term -> term . DIV factor

    SEMI            reduce using rule 23 (expression -> expression PLUS term .)
    PLUS            reduce using rule 23 (expression -> expression PLUS term .)
    MINUS           reduce using rule 23 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 23 (expression -> expression PLUS term .)
    COMMA           reduce using rule 23 (expression -> expression PLUS term .)
    MULT            shift and go to state 29
    DIV             shift and go to state 30


state 38

    (24) expression -> expression MINUS term .
    (26) term -> term . MULT factor
    (27) term -> term . DIV factor

    SEMI            reduce using rule 24 (expression -> expression MINUS term .)
    PLUS            reduce using rule 24 (expression -> expression MINUS term .)
    MINUS           reduce using rule 24 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 24 (expression -> expression MINUS term .)
    COMMA           reduce using rule 24 (expression -> expression MINUS term .)
    MULT            shift and go to state 29
    DIV             shift and go to state 30


state 39

    (26) term -> term MULT factor .

    MULT            reduce using rule 26 (term -> term MULT factor .)
    DIV             reduce using rule 26 (term -> term MULT factor .)
    SEMI            reduce using rule 26 (term -> term MULT factor .)
    PLUS            reduce using rule 26 (term -> term MULT factor .)
    MINUS           reduce using rule 26 (term -> term MULT factor .)
    RPAREN          reduce using rule 26 (term -> term MULT factor .)
    COMMA           reduce using rule 26 (term -> term MULT factor .)


state 40

    (27) term -> term DIV factor .

    MULT            reduce using rule 27 (term -> term DIV factor .)
    DIV             reduce using rule 27 (term -> term DIV factor .)
    SEMI            reduce using rule 27 (term -> term DIV factor .)
    PLUS            reduce using rule 27 (term -> term DIV factor .)
    MINUS           reduce using rule 27 (term -> term DIV factor .)
    RPAREN          reduce using rule 27 (term -> term DIV factor .)
    COMMA           reduce using rule 27 (term -> term DIV factor .)


state 41

    (30) factor -> LPAREN expression RPAREN .

    MULT            reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 30 (factor -> LPAREN expression RPAREN .)


state 42

    (7) function_declaration -> FUNC IDENTIFIER LPAREN func_args RPAREN ARROW . type LBRACE statement_list RBRACE
    (36) type -> . INT32

    INT32           shift and go to state 8

    type                           shift and go to state 46

state 43

    (11) arg_list -> type IDENTIFIER COMMA . arg_list
    (10) arg_list -> . type IDENTIFIER
    (11) arg_list -> . type IDENTIFIER COMMA arg_list
    (36) type -> . INT32

    INT32           shift and go to state 8

    type                           shift and go to state 22
    arg_list                       shift and go to state 47

state 44

    (32) function_call -> IDENTIFIER LPAREN expression_list RPAREN .

    MULT            reduce using rule 32 (function_call -> IDENTIFIER LPAREN expression_list RPAREN .)
    DIV             reduce using rule 32 (function_call -> IDENTIFIER LPAREN expression_list RPAREN .)
    SEMI            reduce using rule 32 (function_call -> IDENTIFIER LPAREN expression_list RPAREN .)
    PLUS            reduce using rule 32 (function_call -> IDENTIFIER LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 32 (function_call -> IDENTIFIER LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 32 (function_call -> IDENTIFIER LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 32 (function_call -> IDENTIFIER LPAREN expression_list RPAREN .)


state 45

    (34) expression_list -> expression COMMA . expression_list
    (33) expression_list -> . expression
    (34) expression_list -> . expression COMMA expression_list
    (35) expression_list -> . empty
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (40) empty -> .
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    RPAREN          reduce using rule 40 (empty -> .)
    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    expression                     shift and go to state 35
    expression_list                shift and go to state 48
    empty                          shift and go to state 36
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 46

    (7) function_declaration -> FUNC IDENTIFIER LPAREN func_args RPAREN ARROW type . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 49


state 47

    (11) arg_list -> type IDENTIFIER COMMA arg_list .

    RPAREN          reduce using rule 11 (arg_list -> type IDENTIFIER COMMA arg_list .)


state 48

    (34) expression_list -> expression COMMA expression_list .

    RPAREN          reduce using rule 34 (expression_list -> expression COMMA expression_list .)


state 49

    (7) function_declaration -> FUNC IDENTIFIER LPAREN func_args RPAREN ARROW type LBRACE . statement_list RBRACE
    (12) statement_list -> . statement
    (13) statement_list -> . statement statement_list
    (14) statement -> . var_declaration
    (15) statement -> . return_statement
    (16) statement -> . expression_statement
    (17) statement -> . show_statement
    (18) statement -> . loopd_statement
    (37) statement -> . FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (6) var_declaration -> . type IDENTIFIER COLON expression SEMI
    (19) return_statement -> . RETURN expression SEMI
    (20) expression_statement -> . expression SEMI
    (21) show_statement -> . SHOW LPAREN type RPAREN expression SEMI
    (39) loopd_statement -> . LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE
    (36) type -> . INT32
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    FOR             shift and go to state 57
    WHILE           shift and go to state 59
    RETURN          shift and go to state 60
    SHOW            shift and go to state 61
    LOOPD           shift and go to state 62
    INT32           shift and go to state 8
    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    type                           shift and go to state 6
    statement_list                 shift and go to state 50
    statement                      shift and go to state 51
    var_declaration                shift and go to state 52
    return_statement               shift and go to state 53
    expression_statement           shift and go to state 54
    show_statement                 shift and go to state 55
    loopd_statement                shift and go to state 56
    expression                     shift and go to state 58
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 50

    (7) function_declaration -> FUNC IDENTIFIER LPAREN func_args RPAREN ARROW type LBRACE statement_list . RBRACE

    RBRACE          shift and go to state 63


state 51

    (12) statement_list -> statement .
    (13) statement_list -> statement . statement_list
    (12) statement_list -> . statement
    (13) statement_list -> . statement statement_list
    (14) statement -> . var_declaration
    (15) statement -> . return_statement
    (16) statement -> . expression_statement
    (17) statement -> . show_statement
    (18) statement -> . loopd_statement
    (37) statement -> . FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (6) var_declaration -> . type IDENTIFIER COLON expression SEMI
    (19) return_statement -> . RETURN expression SEMI
    (20) expression_statement -> . expression SEMI
    (21) show_statement -> . SHOW LPAREN type RPAREN expression SEMI
    (39) loopd_statement -> . LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE
    (36) type -> . INT32
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    RBRACE          reduce using rule 12 (statement_list -> statement .)
    FOR             shift and go to state 57
    WHILE           shift and go to state 59
    RETURN          shift and go to state 60
    SHOW            shift and go to state 61
    LOOPD           shift and go to state 62
    INT32           shift and go to state 8
    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    statement                      shift and go to state 51
    statement_list                 shift and go to state 64
    var_declaration                shift and go to state 52
    return_statement               shift and go to state 53
    expression_statement           shift and go to state 54
    show_statement                 shift and go to state 55
    loopd_statement                shift and go to state 56
    expression                     shift and go to state 58
    type                           shift and go to state 6
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 52

    (14) statement -> var_declaration .

    FOR             reduce using rule 14 (statement -> var_declaration .)
    WHILE           reduce using rule 14 (statement -> var_declaration .)
    RETURN          reduce using rule 14 (statement -> var_declaration .)
    SHOW            reduce using rule 14 (statement -> var_declaration .)
    LOOPD           reduce using rule 14 (statement -> var_declaration .)
    INT32           reduce using rule 14 (statement -> var_declaration .)
    NUMBER          reduce using rule 14 (statement -> var_declaration .)
    IDENTIFIER      reduce using rule 14 (statement -> var_declaration .)
    LPAREN          reduce using rule 14 (statement -> var_declaration .)
    RBRACE          reduce using rule 14 (statement -> var_declaration .)


state 53

    (15) statement -> return_statement .

    FOR             reduce using rule 15 (statement -> return_statement .)
    WHILE           reduce using rule 15 (statement -> return_statement .)
    RETURN          reduce using rule 15 (statement -> return_statement .)
    SHOW            reduce using rule 15 (statement -> return_statement .)
    LOOPD           reduce using rule 15 (statement -> return_statement .)
    INT32           reduce using rule 15 (statement -> return_statement .)
    NUMBER          reduce using rule 15 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 15 (statement -> return_statement .)
    LPAREN          reduce using rule 15 (statement -> return_statement .)
    RBRACE          reduce using rule 15 (statement -> return_statement .)


state 54

    (16) statement -> expression_statement .

    FOR             reduce using rule 16 (statement -> expression_statement .)
    WHILE           reduce using rule 16 (statement -> expression_statement .)
    RETURN          reduce using rule 16 (statement -> expression_statement .)
    SHOW            reduce using rule 16 (statement -> expression_statement .)
    LOOPD           reduce using rule 16 (statement -> expression_statement .)
    INT32           reduce using rule 16 (statement -> expression_statement .)
    NUMBER          reduce using rule 16 (statement -> expression_statement .)
    IDENTIFIER      reduce using rule 16 (statement -> expression_statement .)
    LPAREN          reduce using rule 16 (statement -> expression_statement .)
    RBRACE          reduce using rule 16 (statement -> expression_statement .)


state 55

    (17) statement -> show_statement .

    FOR             reduce using rule 17 (statement -> show_statement .)
    WHILE           reduce using rule 17 (statement -> show_statement .)
    RETURN          reduce using rule 17 (statement -> show_statement .)
    SHOW            reduce using rule 17 (statement -> show_statement .)
    LOOPD           reduce using rule 17 (statement -> show_statement .)
    INT32           reduce using rule 17 (statement -> show_statement .)
    NUMBER          reduce using rule 17 (statement -> show_statement .)
    IDENTIFIER      reduce using rule 17 (statement -> show_statement .)
    LPAREN          reduce using rule 17 (statement -> show_statement .)
    RBRACE          reduce using rule 17 (statement -> show_statement .)


state 56

    (18) statement -> loopd_statement .

    FOR             reduce using rule 18 (statement -> loopd_statement .)
    WHILE           reduce using rule 18 (statement -> loopd_statement .)
    RETURN          reduce using rule 18 (statement -> loopd_statement .)
    SHOW            reduce using rule 18 (statement -> loopd_statement .)
    LOOPD           reduce using rule 18 (statement -> loopd_statement .)
    INT32           reduce using rule 18 (statement -> loopd_statement .)
    NUMBER          reduce using rule 18 (statement -> loopd_statement .)
    IDENTIFIER      reduce using rule 18 (statement -> loopd_statement .)
    LPAREN          reduce using rule 18 (statement -> loopd_statement .)
    RBRACE          reduce using rule 18 (statement -> loopd_statement .)


state 57

    (37) statement -> FOR . LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 65


state 58

    (20) expression_statement -> expression . SEMI
    (23) expression -> expression . PLUS term
    (24) expression -> expression . MINUS term

    SEMI            shift and go to state 66
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 59

    (38) statement -> WHILE . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 67


state 60

    (19) return_statement -> RETURN . expression SEMI
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    expression                     shift and go to state 68
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 61

    (21) show_statement -> SHOW . LPAREN type RPAREN expression SEMI

    LPAREN          shift and go to state 69


state 62

    (39) loopd_statement -> LOOPD . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 70


state 63

    (7) function_declaration -> FUNC IDENTIFIER LPAREN func_args RPAREN ARROW type LBRACE statement_list RBRACE .

    FUNC            reduce using rule 7 (function_declaration -> FUNC IDENTIFIER LPAREN func_args RPAREN ARROW type LBRACE statement_list RBRACE .)
    INT32           reduce using rule 7 (function_declaration -> FUNC IDENTIFIER LPAREN func_args RPAREN ARROW type LBRACE statement_list RBRACE .)
    $end            reduce using rule 7 (function_declaration -> FUNC IDENTIFIER LPAREN func_args RPAREN ARROW type LBRACE statement_list RBRACE .)


state 64

    (13) statement_list -> statement statement_list .

    RBRACE          reduce using rule 13 (statement_list -> statement statement_list .)


state 65

    (37) statement -> FOR LPAREN . var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE
    (6) var_declaration -> . type IDENTIFIER COLON expression SEMI
    (36) type -> . INT32

    INT32           shift and go to state 8

    var_declaration                shift and go to state 71
    type                           shift and go to state 6

state 66

    (20) expression_statement -> expression SEMI .

    FOR             reduce using rule 20 (expression_statement -> expression SEMI .)
    WHILE           reduce using rule 20 (expression_statement -> expression SEMI .)
    RETURN          reduce using rule 20 (expression_statement -> expression SEMI .)
    SHOW            reduce using rule 20 (expression_statement -> expression SEMI .)
    LOOPD           reduce using rule 20 (expression_statement -> expression SEMI .)
    INT32           reduce using rule 20 (expression_statement -> expression SEMI .)
    NUMBER          reduce using rule 20 (expression_statement -> expression SEMI .)
    IDENTIFIER      reduce using rule 20 (expression_statement -> expression SEMI .)
    LPAREN          reduce using rule 20 (expression_statement -> expression SEMI .)
    RBRACE          reduce using rule 20 (expression_statement -> expression SEMI .)


state 67

    (38) statement -> WHILE LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    expression                     shift and go to state 72
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 68

    (19) return_statement -> RETURN expression . SEMI
    (23) expression -> expression . PLUS term
    (24) expression -> expression . MINUS term

    SEMI            shift and go to state 73
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 69

    (21) show_statement -> SHOW LPAREN . type RPAREN expression SEMI
    (36) type -> . INT32

    INT32           shift and go to state 8

    type                           shift and go to state 74

state 70

    (39) loopd_statement -> LOOPD LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    expression                     shift and go to state 75
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 71

    (37) statement -> FOR LPAREN var_declaration . expression SEMI expression RPAREN LBRACE statement_list RBRACE
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    expression                     shift and go to state 76
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 72

    (38) statement -> WHILE LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (23) expression -> expression . PLUS term
    (24) expression -> expression . MINUS term

    RPAREN          shift and go to state 77
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 73

    (19) return_statement -> RETURN expression SEMI .

    FOR             reduce using rule 19 (return_statement -> RETURN expression SEMI .)
    WHILE           reduce using rule 19 (return_statement -> RETURN expression SEMI .)
    RETURN          reduce using rule 19 (return_statement -> RETURN expression SEMI .)
    SHOW            reduce using rule 19 (return_statement -> RETURN expression SEMI .)
    LOOPD           reduce using rule 19 (return_statement -> RETURN expression SEMI .)
    INT32           reduce using rule 19 (return_statement -> RETURN expression SEMI .)
    NUMBER          reduce using rule 19 (return_statement -> RETURN expression SEMI .)
    IDENTIFIER      reduce using rule 19 (return_statement -> RETURN expression SEMI .)
    LPAREN          reduce using rule 19 (return_statement -> RETURN expression SEMI .)
    RBRACE          reduce using rule 19 (return_statement -> RETURN expression SEMI .)


state 74

    (21) show_statement -> SHOW LPAREN type . RPAREN expression SEMI

    RPAREN          shift and go to state 78


state 75

    (39) loopd_statement -> LOOPD LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (23) expression -> expression . PLUS term
    (24) expression -> expression . MINUS term

    RPAREN          shift and go to state 79
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 76

    (37) statement -> FOR LPAREN var_declaration expression . SEMI expression RPAREN LBRACE statement_list RBRACE
    (23) expression -> expression . PLUS term
    (24) expression -> expression . MINUS term

    SEMI            shift and go to state 80
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 77

    (38) statement -> WHILE LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 81


state 78

    (21) show_statement -> SHOW LPAREN type RPAREN . expression SEMI
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    expression                     shift and go to state 82
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 79

    (39) loopd_statement -> LOOPD LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 83


state 80

    (37) statement -> FOR LPAREN var_declaration expression SEMI . expression RPAREN LBRACE statement_list RBRACE
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    expression                     shift and go to state 84
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 81

    (38) statement -> WHILE LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (12) statement_list -> . statement
    (13) statement_list -> . statement statement_list
    (14) statement -> . var_declaration
    (15) statement -> . return_statement
    (16) statement -> . expression_statement
    (17) statement -> . show_statement
    (18) statement -> . loopd_statement
    (37) statement -> . FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (6) var_declaration -> . type IDENTIFIER COLON expression SEMI
    (19) return_statement -> . RETURN expression SEMI
    (20) expression_statement -> . expression SEMI
    (21) show_statement -> . SHOW LPAREN type RPAREN expression SEMI
    (39) loopd_statement -> . LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE
    (36) type -> . INT32
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    FOR             shift and go to state 57
    WHILE           shift and go to state 59
    RETURN          shift and go to state 60
    SHOW            shift and go to state 61
    LOOPD           shift and go to state 62
    INT32           shift and go to state 8
    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    expression                     shift and go to state 58
    statement_list                 shift and go to state 85
    statement                      shift and go to state 51
    var_declaration                shift and go to state 52
    return_statement               shift and go to state 53
    expression_statement           shift and go to state 54
    show_statement                 shift and go to state 55
    loopd_statement                shift and go to state 56
    type                           shift and go to state 6
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 82

    (21) show_statement -> SHOW LPAREN type RPAREN expression . SEMI
    (23) expression -> expression . PLUS term
    (24) expression -> expression . MINUS term

    SEMI            shift and go to state 86
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 83

    (39) loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (12) statement_list -> . statement
    (13) statement_list -> . statement statement_list
    (14) statement -> . var_declaration
    (15) statement -> . return_statement
    (16) statement -> . expression_statement
    (17) statement -> . show_statement
    (18) statement -> . loopd_statement
    (37) statement -> . FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (6) var_declaration -> . type IDENTIFIER COLON expression SEMI
    (19) return_statement -> . RETURN expression SEMI
    (20) expression_statement -> . expression SEMI
    (21) show_statement -> . SHOW LPAREN type RPAREN expression SEMI
    (39) loopd_statement -> . LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE
    (36) type -> . INT32
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    FOR             shift and go to state 57
    WHILE           shift and go to state 59
    RETURN          shift and go to state 60
    SHOW            shift and go to state 61
    LOOPD           shift and go to state 62
    INT32           shift and go to state 8
    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    expression                     shift and go to state 58
    statement_list                 shift and go to state 87
    statement                      shift and go to state 51
    var_declaration                shift and go to state 52
    return_statement               shift and go to state 53
    expression_statement           shift and go to state 54
    show_statement                 shift and go to state 55
    loopd_statement                shift and go to state 56
    type                           shift and go to state 6
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 84

    (37) statement -> FOR LPAREN var_declaration expression SEMI expression . RPAREN LBRACE statement_list RBRACE
    (23) expression -> expression . PLUS term
    (24) expression -> expression . MINUS term

    RPAREN          shift and go to state 88
    PLUS            shift and go to state 27
    MINUS           shift and go to state 28


state 85

    (38) statement -> WHILE LPAREN expression RPAREN LBRACE statement_list . RBRACE

    RBRACE          shift and go to state 89


state 86

    (21) show_statement -> SHOW LPAREN type RPAREN expression SEMI .

    FOR             reduce using rule 21 (show_statement -> SHOW LPAREN type RPAREN expression SEMI .)
    WHILE           reduce using rule 21 (show_statement -> SHOW LPAREN type RPAREN expression SEMI .)
    RETURN          reduce using rule 21 (show_statement -> SHOW LPAREN type RPAREN expression SEMI .)
    SHOW            reduce using rule 21 (show_statement -> SHOW LPAREN type RPAREN expression SEMI .)
    LOOPD           reduce using rule 21 (show_statement -> SHOW LPAREN type RPAREN expression SEMI .)
    INT32           reduce using rule 21 (show_statement -> SHOW LPAREN type RPAREN expression SEMI .)
    NUMBER          reduce using rule 21 (show_statement -> SHOW LPAREN type RPAREN expression SEMI .)
    IDENTIFIER      reduce using rule 21 (show_statement -> SHOW LPAREN type RPAREN expression SEMI .)
    LPAREN          reduce using rule 21 (show_statement -> SHOW LPAREN type RPAREN expression SEMI .)
    RBRACE          reduce using rule 21 (show_statement -> SHOW LPAREN type RPAREN expression SEMI .)


state 87

    (39) loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE statement_list . RBRACE

    RBRACE          shift and go to state 90


state 88

    (37) statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 91


state 89

    (38) statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .

    FOR             reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    SHOW            reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LOOPD           reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    INT32           reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 38 (statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE .)


state 90

    (39) loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE .

    FOR             reduce using rule 39 (loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 39 (loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 39 (loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    SHOW            reduce using rule 39 (loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LOOPD           reduce using rule 39 (loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    INT32           reduce using rule 39 (loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 39 (loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 39 (loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 39 (loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 39 (loopd_statement -> LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE .)


state 91

    (37) statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE . statement_list RBRACE
    (12) statement_list -> . statement
    (13) statement_list -> . statement statement_list
    (14) statement -> . var_declaration
    (15) statement -> . return_statement
    (16) statement -> . expression_statement
    (17) statement -> . show_statement
    (18) statement -> . loopd_statement
    (37) statement -> . FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE
    (38) statement -> . WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE
    (6) var_declaration -> . type IDENTIFIER COLON expression SEMI
    (19) return_statement -> . RETURN expression SEMI
    (20) expression_statement -> . expression SEMI
    (21) show_statement -> . SHOW LPAREN type RPAREN expression SEMI
    (39) loopd_statement -> . LOOPD LPAREN expression RPAREN LBRACE statement_list RBRACE
    (36) type -> . INT32
    (22) expression -> . term
    (23) expression -> . expression PLUS term
    (24) expression -> . expression MINUS term
    (25) term -> . factor
    (26) term -> . term MULT factor
    (27) term -> . term DIV factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN
    (31) factor -> . function_call
    (32) function_call -> . IDENTIFIER LPAREN expression_list RPAREN

    FOR             shift and go to state 57
    WHILE           shift and go to state 59
    RETURN          shift and go to state 60
    SHOW            shift and go to state 61
    LOOPD           shift and go to state 62
    INT32           shift and go to state 8
    NUMBER          shift and go to state 18
    IDENTIFIER      shift and go to state 14
    LPAREN          shift and go to state 19

    var_declaration                shift and go to state 52
    expression                     shift and go to state 58
    statement_list                 shift and go to state 92
    statement                      shift and go to state 51
    return_statement               shift and go to state 53
    expression_statement           shift and go to state 54
    show_statement                 shift and go to state 55
    loopd_statement                shift and go to state 56
    type                           shift and go to state 6
    term                           shift and go to state 16
    factor                         shift and go to state 17
    function_call                  shift and go to state 20

state 92

    (37) statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list . RBRACE

    RBRACE          shift and go to state 93


state 93

    (37) statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE .

    FOR             reduce using rule 37 (statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 37 (statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 37 (statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE .)
    SHOW            reduce using rule 37 (statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE .)
    LOOPD           reduce using rule 37 (statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE .)
    INT32           reduce using rule 37 (statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 37 (statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 37 (statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 37 (statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 37 (statement -> FOR LPAREN var_declaration expression SEMI expression RPAREN LBRACE statement_list RBRACE .)

